{% schema %}
{
  "name": "Product Grid With Popup",
  "tag": "section",
  "settings": [
    {
      "type": "collection",
      "id": "product_collection",
      "label": "Select Collection"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Tisso vison in the wild"
    }
  ],
  "presets": [
    {
      "name": "Product Grid Popup"
    }
  ]
}
{% endschema %}

<style>
.product-grid-popup-section {
  padding: 40px;
}

.product-grid-popup-section h2 {
  font-size: 2rem;
  margin-bottom: 20px;
  text-align: center;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 20px;
}

.grid img {
  width: 100%;
  cursor: pointer;
  object-fit: cover;
}

/* Popup modal */
.modal-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.6);
  z-index: 1000;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: white;
  padding: 20px;
  width: 90%;
  max-width: 400px;
  position: relative;
  border-radius: 8px;
  overflow-y: auto;
  max-height: 90vh;
}

.modal-content img {
  width: 100%;
  height: auto;
}

.close-modal {
  position: absolute;
  right: 16px;
  top: 8px;
  cursor: pointer;
  font-size: 1.5rem;
}

button.add-to-cart {
  background-color: black;
  color: white;
  padding: 12px 24px;
  border: none;
  width: 100%;
  margin-top: 20px;
  font-weight: bold;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
}

button.add-to-cart:hover {
  background-color: #333;
}
</style>

<div class="product-grid-popup-section">
  <h2>{{ section.settings.heading }}</h2>
  <div class="grid">
    {% assign collection = collections[section.settings.product_collection] %}
    {% for product in collection.products %}
      <img 
        src="{{ product.featured_image | image_url: width: 400 }}" 
        alt="{{ product.title }}" 
        data-title="{{ product.title }}"
        data-price="{{ product.price | money }}"
        data-description="{{ product.description | strip_html | truncatewords: 20 }}"
        data-image="{{ product.featured_image | image_url: width: 600 }}"
        data-url="{{ product.url }}"
        data-id="{{ product.variants.first.id }}"
      >
    {% endfor %}
  </div>
</div>

<!-- Popup Modal -->
<div class="modal-overlay" id="product-modal">
  <div class="modal-content">
    <span class="close-modal" onclick="closeModal()">×</span>
    <img id="modal-image" src="" alt="">
    <h3 id="modal-title"></h3>
    <p id="modal-price"></p>
    <p id="modal-description"></p>

    <label for="color-select">Color</label>
    <div>
      <button class="variant-btn">White</button>
      <button class="variant-btn">Black</button>
    </div>

    <label for="size-select">Size</label>
    <select id="size-select">
      <option value="">Choose your size</option>
      <option>XS</option>
      <option>S</option>
      <option>M</option>
      <option>L</option>
      <option>XL</option>
    </select>

    <button class="add-to-cart" id="add-to-cart-btn">ADD TO CART →</button>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const images = document.querySelectorAll(".grid img");
  const modal = document.getElementById("product-modal");

  images.forEach(img => {
    img.addEventListener("click", () => {
      document.getElementById("modal-image").src = img.dataset.image;
      document.getElementById("modal-title").innerText = img.dataset.title;
      document.getElementById("modal-price").innerText = img.dataset.price;
      document.getElementById("modal-description").innerText = img.dataset.description;
      document.getElementById("add-to-cart-btn").setAttribute("data-id", img.dataset.id);
      modal.style.display = "flex";
    });
  });
});

function closeModal() {
  document.getElementById("product-modal").style.display = "none";
}

// Example: Add to cart
document.getElementById("add-to-cart-btn").addEventListener("click", function() {
  const variantId = this.getAttribute("data-id");

  fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ id: variantId, quantity: 1 })
  })
  .then(response => response.json())
  .then(data => {
    alert("Added to cart!");
    closeModal();
  })
  .catch(error => {
    alert("Error adding to cart");
  });
});
</script>
